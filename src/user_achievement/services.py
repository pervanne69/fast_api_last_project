from sqlalchemy import select, insert, deletefrom fastapi import Dependsfrom sqlalchemy.ext.asyncio import AsyncSessionfrom ..database import get_async_sessionfrom .schemas import UserAchievementElementasync def get_user_achievements_from_db(db, session: AsyncSession = Depends(    get_async_session)):    query = select(db)    result = await session.execute(query)    return result.all()async def get_user_achievement_by_data(db,                                       user_achievement_el: UserAchievementElement,                                       session: AsyncSession = Depends(                                           get_async_session)):    query = select(db).where(db.c.user_id == user_achievement_el.user_id,                             db.c.achievement_id == user_achievement_el.achievement_id)    result = await session.execute(query)    return result.all()async def create_user_achievement(db,                                  user_achievement_el: UserAchievementElement,                                  session: AsyncSession = Depends(                                      get_async_session)):    statement = insert(db).values(user_id=user_achievement_el.user_id,                                  achievement_id=user_achievement_el.achievement_id)    await session.execute(statement)    await session.commit()async def delete_user_achievement_from_db(db,                                          user_achievement_el: UserAchievementElement,                                          session: AsyncSession = Depends(                                              get_async_session)):    statement = delete(db).where(db.c.user_id == user_achievement_el.user_id,                                 db.c.achievement_id == user_achievement_el.achievement_id)    await session.execute(statement)    await session.commit()