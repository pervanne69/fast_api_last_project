from fastapi import Dependsfrom sqlalchemy.ext.asyncio import AsyncSessionfrom ..database import get_async_sessionfrom sqlalchemy import select, insert, deletefrom .schemas import EventVisitorElementasync def get_event_visitors_from_db(db, session: AsyncSession = Depends(    get_async_session)):    query = select(db)    result = await session.execute(query)    return result.all()async def get_event_visitor_from_db(db,                                    event_visitor_el: EventVisitorElement,                                    session: AsyncSession = Depends(                                        get_async_session)):    query = select(db).where(        db.c.user_id == event_visitor_el.user_id,        db.c.event_id == event_visitor_el.event_id)    result = await session.execute(query)    return result.all()async def create_event_visitor(db, event_visitor_el: EventVisitorElement,                               session: AsyncSession = Depends(                                   get_async_session)):    statement = insert(db).values(event_id=event_visitor_el.event_id,                                  user_id=event_visitor_el.user_id,                                  user_status=event_visitor_el.user_status)    await session.execute(statement)    await session.commit()async def delete_event_visitor_from_db(db,                                       event_visitor_el: EventVisitorElement,                                       session: AsyncSession = Depends(                                           get_async_session)):    statement = delete(db).where(        db.c.user_id == event_visitor_el.user_id,        db.c.event_id == event_visitor_el.event_id)    await session.execute(statement)    await session.commit()