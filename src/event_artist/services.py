from fastapi import Dependsfrom sqlalchemy.ext.asyncio import AsyncSessionfrom ..database import get_async_sessionfrom sqlalchemy import select, insert, deletefrom .schemas import EventArtistElementasync def get_event_artists_from_db(db, session: AsyncSession = Depends(    get_async_session)):    query = select(db)    result = await session.execute(query)    return result.all()async def get_event_artist_from_db(db, event_artist_cr: EventArtistElement,                                   session: AsyncSession = Depends(                                       get_async_session)):    query = select(db).where(db.c.artist_id == event_artist_cr.artist_id,                             db.c.event_id == event_artist_cr.event_id)    result = await session.execute(query)    return result.all()async def create_event_artist(db, event_artist_cr: EventArtistElement,                              session: AsyncSession = Depends(                                  get_async_session)):    statement = insert(db).values(event_id=event_artist_cr.event_id,                                  artist_id=event_artist_cr.artist_id)    await session.execute(statement)    await session.commit()async def delete_event_artist_from_db(db, event_artist_del: EventArtistElement,                                      session: AsyncSession = Depends(                                          get_async_session)):    statement = delete(db).where(db.c.artist_id == event_artist_del.artist_id,                                 db.c.event_id == event_artist_del.event_id)    await session.execute(statement)    await session.commit()