from fastapi import Dependsfrom sqlalchemy import select, insert, deletefrom sqlalchemy.ext.asyncio import AsyncSessionfrom ..database import get_async_sessionfrom .schemas import SiteCreate, SiteDeleteasync def get_sites_from_db(db, session: AsyncSession = Depends(    get_async_session)):    query = select(db)    result = await session.execute(query)    return result.all()async def get_site_by_data(site_cr: SiteCreate, db,                           session: AsyncSession = Depends(get_async_session)):    query = select(db).where(db.c.name == site_cr.name,                             db.c.address == site_cr.address)    result = await session.execute(query)    result_f = result.all()    return result_fasync def get_site_by_id(site_id: int, db,                         session: AsyncSession = Depends(get_async_session)):    query = select(db).where(db.c.id == site_id)    result = await session.execute(query)    result_f = result.all()    return result_fasync def get_site_by_name(site_del: SiteDelete, db,                           session: AsyncSession = Depends(get_async_session)):    query = select(db).where(db.c.name == site_del.name)    result = await session.execute(query)    result_f = result.all()    return result_fasync def create_site(site_cr: SiteCreate, db,                      session: AsyncSession = Depends(get_async_session)):    statement = insert(db).values(name=site_cr.name,                                  address=site_cr.address)    await session.execute(statement)    await session.commit()async def delete_site_from_db(site_del: SiteDelete, db,                              session: AsyncSession = Depends(                                  get_async_session)):    statement = delete(db).where(db.c.name == site_del.name)    await session.execute(statement)    await session.commit()