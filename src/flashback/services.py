from fastapi import Dependsfrom sqlalchemy import select, insert, deletefrom sqlalchemy.ext.asyncio import AsyncSessionfrom ..database import get_async_sessionfrom .schemas import FlashbackElementasync def get_flashbacks_from_db(db, session: AsyncSession = Depends(    get_async_session)):    query = select(db)    result = await session.execute(query)    return result.all()async def get_flashback_by_data(db, flashback_el: FlashbackElement,                                session: AsyncSession = Depends(                                    get_async_session)):    query = select(db).where(db.c.user_id == flashback_el.user_id,                             db.c.event_id == flashback_el.event_id,                             db.c.signature == flashback_el.signature)    result = await session.execute(query)    return result.all()async def create_flashback(db, flashback_el: FlashbackElement,                           session: AsyncSession = Depends(                               get_async_session)):    statement = insert(db).values(user_id=flashback_el.user_id,                                  event_id=flashback_el.event_id,                                  signature=flashback_el.signature)    await session.execute(statement)    await session.commit()async def delete_flashback_from_db(db, flashback_el: FlashbackElement,                           session: AsyncSession = Depends(                               get_async_session)):    statement = delete(db).where(db.c.user_id == flashback_el.user_id,                                 db.c.event_id == flashback_el.event_id,                                 db.c.signature == flashback_el.signature)    await session.execute(statement)    await session.commit()